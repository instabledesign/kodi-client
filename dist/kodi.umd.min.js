// https://github.com/instabledesign/kodi-client v0.1.0-alpha Copyright 2020 Anthony MOUTTE <instabledesign@gmail.com>
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("KodiTransportError.js")):"function"==typeof define&&define.amd?define(["exports","KodiTransportError.js"],t):t((e=e||self).Kodi={},e.TransportError)}(this,(function(e,t){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t;const o="2.0";function n(e,t){if(!(this instanceof n))return new n(e,t);if(t&&"object"!==Object.prototype.toString.call(t).split(" ").pop().split("]").shift().toLowerCase())throw new TypeError("Options must be an object.");this.id=e,({method:this.method,params:this.params,jsonrpc:this.jsonrpc=o}=t||{})}n.prototype.toJson=function(){return JSON.stringify({id:this.id,jsonrpc:this.jsonrpc,method:this.method,params:this.params})};var r=function(){let e=1;return t=>new n(e++,t)}();function i(e,t){if(!(this instanceof i))return new i(e);let o=[];const n=(t=t||{}).factory||r;i.prototype.createRequest=function(){return"object"==typeof arguments[0]?Object.assign(n.call(n,{}),arguments[0]):n.call(n,{method:arguments[0],params:arguments[1]})},i.prototype.connect=e.connect,i.prototype.disconnect=e.disconnect,i.prototype.request=(e,t,o)=>this.send(this.createRequest(e,t),o),i.prototype.send=(t,o)=>e.send(t,o),i.prototype.addNotificationListener=function(e){const t=o.push(e);return()=>{delete o[t]}},i.prototype.removeNotificationListener=function(e){o=o.filter((t=>t===e))}}function s(e){if(!(this instanceof s))return new s(e);if(!(e instanceof i))throw new TypeError("It must be a KodiClient.");let t=null,o={};this.getClient=()=>e,this.onReady=new Promise(((n,r)=>{e.request("JSONRPC.Introspect",{getdescriptions:!0,getmetadata:!0,filterbytransport:!0}).then((r=>{t=r.result;const i=t.methods;for(const t in i){let[o,n]=t.split(".");this[o]||(this[o]={}),this[o][n]=(o,n)=>e.request(t,o,n).then((e=>e.result))}const s=t.notifications;for(const e in s){let[t,n]=e.split(".");this[t]||(this[t]={}),this[t][n]=e=>{o[`${t}.${n}`]||(o[`${t}.${n}`]=[]),o[`${t}.${n}`].push(e)}}e.addNotificationListener(((e,t)=>{o.hasOwnProperty(e.method)&&o[e.method].forEach((o=>o(e.params,t)))})),n([this,t])})).catch(r)})),s.prototype.createRequest=e.createRequest,s.prototype.connect=()=>e.connect(),s.prototype.disconnect=e.disconnect,s.prototype.request=e.request,s.prototype.send=e.send,s.prototype.addNotificationListener=e.addNotificationListener,s.prototype.removeNotificationListener=e.removeNotificationListener}function c(e){if(!(this instanceof c))return new c(e);Object.assign(this,e)}function a(e){if(!(this instanceof a))return new a(e);if(e&&"object"!==Object.prototype.toString.call(e).split(" ").pop().split("]").shift().toLowerCase())throw new TypeError("Data must be an object.");Object.assign(this,e)}function p(e){if(!(this instanceof p))return new p(e);let t,o,n={},r=[];p.prototype.connect=()=>o||(o=new Promise(((o,i)=>{t=new WebSocket(e),t.onopen=()=>o(t),t.onerror=e=>{1==t.readyState&&console.error(e)},t.onmessage=e=>{const t=JSON.parse(e.data);if(null===t.id)return void console.error(e);if(t.id){const e=new Kodi.Response(t);return void(e.error?n[e.id].deferredReject(e):n[e.id].deferredResolve(e))}const o=new c(t);r.forEach((t=>t(o,e)))},t.onclose=e=>{t=null,3001!=e.code&&i(e)}})),o),p.prototype.send=(e,o)=>{if(!e.id)throw new TypeError("Request id is require.");let r=this;return new Promise((function(o,i){n[e.id]={promise:this,deferredResolve:o,deferredReject:i};try{r.connect().then((()=>t.send(e.toJson())))}catch(e){i(new a({message:"An error occured during sending message.",error:e}))}}))},p.prototype.addNotificationListener=e=>{const t=r.push(e);return()=>{delete r[t]}},p.prototype.removeNotificationListener=e=>{r=r.filter((t=>t===e))},p.prototype.disconnect=()=>{t&&t.close(3001)}}function u(e){if(!(this instanceof u))return new u(e);u.prototype.connect=async()=>this,u.prototype.send=function(o,n){return new Promise(((n,r)=>{const i=new XMLHttpRequest;i.onreadystatechange=function(e){if(this.readyState===XMLHttpRequest.DONE)if(200===this.status){const e=new a(JSON.parse(this.responseText));e.error?r(e):n(e)}else{let o=new t("XHR Error"+this.statusText,e);r(new a({message:o.message,error:o}))}},i.onerror=function(e){let o=new t("XHR Error"+this.statusText,e);r(new a({message:o.message,error:o}))},i.open("GET",e+"?request="+o.toJson(),!0),i.send(null)}))},u.prototype.addNotificationListener=function(e){console.warn("Notification for KodiXMLHttpTransport is not implemented yet")},u.prototype.close=function(){}}var d=e=>(t,o)=>{console.log("Notification %o.",t,o),e(t,o)},l=(e,t)=>o=>e(t?t.reverse().reduce(((e,t)=>null===e?t:t(e)),o):o),f=e=>(t,o)=>{console.log("Request %o",t);const n=Date.now();return e(t,o).then((e=>{const t=Date.now();return console.log("Response %o in %d ms",e,t-n),e}))},h=e=>t=>(o,n)=>{const r=Object.assign({cache:!0,checkCache:!0,writeCache:!0},n),i=JSON.stringify([o.method,o.params]);return new Promise(((s,c)=>{if(r.cache&&r.checkCache){const t=e.get(i);if(t)return console.log("Cache hit %s",i,t),void s(t);console.log("Cache miss %s",i)}t(o,n).then((t=>{r.cache&&r.writeCache&&(console.debug("Cache write %s",i,t),e.set(i,t)),s(t)})).catch((e=>c(e)))}))},y=(e,t)=>t?t.reverse().reduce(((e,t)=>null===e?t:t(e)),e):e;function w(e){if(!(this instanceof w))return new w(e);let t=e||{};w.prototype.set=(e,o)=>t[e]=o,w.prototype.get=e=>t[e],w.prototype.delete=e=>delete t[e],w.prototype.clear=()=>t={}}function m(e){if(!(this instanceof m))return new m(e);e=e||"",m.prototype.set=(t,o)=>localStorage.setItem(e+t,JSON.stringify(o)),m.prototype.get=t=>{const o=localStorage.getItem(e+t);return o?JSON.parse(o):o},m.prototype.delete=t=>localStorage.removeItem(e+t),m.prototype.clear=()=>localStorage.clear()}function g(e,t){return{set:(t,o)=>e.set(t,{time:Date.now(),value:o}),get:o=>{const n=e.get(o);return n&&n.time?n.time>Date.now()-t?n.value:(console.log("Cache expire."),null):n},delete:t=>e.delete(t),clear:()=>e.clear()}}function b(e){let t=e.middlewares||[f];return!1!==e.cache&&t.push(h(g(function(e){let t=e.cache;if("object"==typeof t){if("function"!=typeof t.set||"function"!=typeof t.get||"function"!=typeof t.delete||"function"!=typeof t.clear)throw TypeError("Kodi cache must implement set(key, value), get(key), delete(key), clear() function");return t}return window.localStorage?new m("request_"):new w}(e),e.cacheTTL||1e4))),t}function j(e){return e.notificationMiddlewares||[d]}function L(e){const t=function(e){let t=e.transport;switch(t||(t="function"==typeof window.WebSocket?"ws://{host}:9090":"http://{host}:8080/jsonrpc",t=t.replace("{host}",window.location)),typeof t){case"object":if("function"!=typeof t.send||"function"!=typeof t.addNotificationListener)throw TypeError("Kodi transport object must implement send(request, options), addNotificationListener(listener) function");return t;case"string":let e="";try{e=new URL(t)}catch(e){throw TypeError("Kodi transport string must be a valid path")}return null!==e.protocol.match(/wss?:/)?new p(e.toString()):new u(e.toString());default:throw TypeError("Kodi transport can be object or url")}}(e);return new i({connect:t.connect,disconnect:t.disconnect,send:y(t.send,b(e)),addNotificationListener:l(t.addNotificationListener,j(e))})}e.Client=i,e.ClientRPC=s,e.InMemory=w,e.LocalStorage=m,e.Request=n,e.RequestFactory=r,e.Response=a,e.WebSocketTransport=p,e.XMLHttpTransport=u,e.createClient=L,e.createClientRPC=function(e){return new s(L(e))},e.notificationMiddlewareLogging=d,e.notificationStackMiddleware=l,e.requestMiddlewareCache=h,e.requestMiddlewareLogging=f,e.requestReuestMiddleware=y,e.withTTL=g,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=kodi.umd.min.js.map
